name: gh-pages

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master
        paths:
            - "docs/**"

jobs:
    build:
        runs-on: ubuntu-latest
        container: mrtravis/gridtools:gcc-9-atlas
        steps:
            - name: Checkout
              uses: actions/checkout@v2.3.1 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.
              with:
                persist-credentials: false
            #
            # Generate documentation
            #
            - name: Install eve and dependencies
              run: |
                  python3 -m pip install .
                  python3 -m pip install -r requirements_dev.txt # TODO remove (once we don't include debugtools)
            - name: Build eve documentation
              run: |
                cd docs/eve
                make html
            - name: Build gtc documentation
              run: |
                cd docs/gtc
                make html
            - name: Build gtc_frontend documentation
              run: |
                cd docs/gt_frontend
                make html
            #
            # Deploy documentation
            #
            - name: Install dependencies # rsync -> github-pages-deploy-action, jq -> PR id
              run: apt-get update && apt-get install -y jq rsync
            - name: Gather html documentation
              shell: bash
              run: |
                mkdir _deploy/
                cd _deploy/
                mv ../docs/eve/_build/html/ eve
                mv ../docs/gtc/_build/html/ gtc
                mv ../docs/gt_frontend/_build/html/ gt_frontend
            - name: Check if current commit is the most recent one on this branch
              shell: bash
              id: check_if_most_recent_upstream
              run: |
                REMOTE_URL=$(git remote get-url origin)
                LATEST_UPSTREAM_COMMIT=$(git ls-remote $REMOTE_URL | grep $GITHUB_REF\$ | cut -f 1)
                CURRENT_COMMIT=$(git rev-parse HEAD)
                git fetch origin $LATEST_UPSTREAM_COMMIT
                # check if current state differs from upstream state (we don't compare commit hashes directly because
                #  this is error prone for PRs
                set +e;
                git diff --quiet --exit-code $LATEST_UPSTREAM_COMMIT
                IS_MOST_RECENT=$?
                set -e
                if [ $IS_MOST_RECENT -eq 0 ]; then
                  echo "::set-output name=is_most_recent::true"
                else
                  echo "::warning::Documentation deployment skipped since the current commit ($CURRENT_COMMIT) differs from the most recent on this branch ($LATEST_UPSTREAM_COMMIT)"
                fi
            - name: Assemble target folder
              id: target_folder
              shell: bash
              run: |
                if [ "${{ github.event_name }}" = "pull_request" ]; then
                  PR_ID=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
                  if ! [[ "$PR_ID" =~ ^[0-9]+$ ]]; then exit 1; fi
                  TARGET_FOLDER="docs/pr/${PR_ID}"
                else
                  if [[ "$(git branch --show-current)" != "master" ]]; then exit 2; fi
                  TARGET_FOLDER="docs/latest"
                fi
                echo "Deployment target folder: $TARGET_FOLDER"
                echo "::set-output name=path::$TARGET_FOLDER"
            - name: Deploy to github pages
              uses: JamesIves/github-pages-deploy-action@3.6.2
              if: steps.check_if_most_recent_upstream.outputs.is_most_recent == 'true'
              with:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                BRANCH: gh-pages # The branch the action should deploy to.
                FOLDER: _deploy # The folder the action should deploy.
                TARGET_FOLDER: ${{ steps.target_folder.outputs.path }}
                CLEAN: true # Automatically remove deleted files from the deploy branch
            -   name: Comment PR
                if: ${{ github.event_name == 'pull_request' }}
                uses: unsplash/comment-on-pr@master
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                with:
                    msg: "[Documentation preview](https://gridtools.github.io/gtc/${{ steps.target_folder.outputs.path }})"
                    check_for_duplicate_msg: true
