name: gh-pages

on:
    push:
        branches:
            - master
            - gh-pages-deploy
        pull_request:
            branches:
                - master
            paths:
                - "docs/**"

jobs:
    build:
        runs-on: ubuntu-latest
        container: mrtravis/gridtools:gcc-9-atlas
        steps:
            - name: Checkout
              uses: actions/checkout@v2.3.1 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.
              with:
                persist-credentials:
            - name: Install dependencies # rsync -> github-pages-deploy-action, jq -> PR id
              run: apt-get update && apt-get install -y jq rsyncfalse
            - name: Test blub
              run: |
                PR_ID=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
                echo $PR_ID
            - name: Install eve and dependencies
              run: |
                  python3 -m pip install .
                  python3 -m pip install -r requirements_dev.txt # TODO remove (once we don't include debugtools)
            - name: Build eve documentation
              run: |
                cd docs/eve
                make html
            - name: Build gtc documentation
              run: |
                cd docs/gtc
                make html
            - name: Build gtc_frontend documentation
              run: |
                cd docs/gt_frontend
                make html
            - name: Gather html documentation
              shell: bash
              run: |
                mkdir _deploy/
                cd _deploy/
                mv ../docs/eve/_build/html/ eve
                mv ../docs/gtc/_build/html/ gtc
                mv ../docs/gt_frontend/_build/html/ gt_frontend
            - name: Capture current branch name
              shell: bash
              id: current_branch
              run: echo "::set-output name=name::$(git branch --show-current)"
            - name: Check if current commit is the most recent one on this branch
              shell: bash
              id: check_if_most_recent_upstream
              run: |
                REMOTE_URL=$(git remote get-url origin)
                CURRENT_BRANCH=$(git branch --show-current)
                LATEST_UPSTREAM_COMMIT=$(git ls-remote $REMOTE_URL | grep refs/heads/$CURRENT_BRANCH | cut -f 1)
                CURRENT_COMMIT=$(git rev-parse HEAD)
                if [ "$LATEST_UPSTREAM_COMMIT" = "$CURRENT_COMMIT" ]; then echo "::set-output name=is_most_recent::TRUE"; fi
            - name: Print warning if deployment skipped
              run: echo "::warning::Documentation deployment skipped since the current commit is not the most recent of this branch"
              if: steps.check_if_most_recent_upstream.outputs.is_most_recent != 'TRUE'
            #- name: Assemble target folder
            #  shell: true
            #  run: |
            #    if [ "${{ github.event_name }" = "pull_request" ]; then
            #      PR_ID=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
            #      if ! [[ "$PR_ID" =~ "^[0-9]+$" ]]; then
            #        echo "Could not determine PR Id"
            #        exit 1
            #      fi
            #      TARGET_FOLDER="docs/pr/${PR_ID}"
            - name: Deploy
              uses: JamesIves/github-pages-deploy-action@3.6.2
              if: steps.check_if_most_recent_upstream.outputs.is_most_recent == 'TRUE'
              with:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                BRANCH: gh-pages # The branch the action should deploy to.
                FOLDER: _deploy # The folder the action should deploy.
                TARGET_FOLDER: docs/branches/${{ steps.current_branch.outputs.name }}
                CLEAN: true # Automatically remove deleted files from the deploy branch
